{"mappings":"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","sources":["<anon>","index.js"],"sourcesContent":["// let URL = \"http://192.168.1.31/api/\"\n// let URL = \"http://localhost:8080/api\"\nlet URL = \"http://172.160.248.2/api\";\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + window.localStorage.getItem(\"jwt\");\naxios.defaults.baseURL = URL + \"/en\";\nlet _URL = URL;\nURL = \"\";\nif (window.localStorage.getItem(\"theme\") == null) window.localStorage.setItem(\"theme\", \"dark\");\nif (window.localStorage.getItem(\"lan\") == null) window.localStorage.setItem(\"lan\", \"EN\");\ndocument.querySelector(\"html\").setAttribute(\"data-theme\", window.localStorage.getItem(\"theme\"));\ndocument.addEventListener(\"alpine:init\", ()=>{\n    Alpine.store(\"logged_in\", 0);\n    Alpine.store(\"show\", {\n        show: 0,\n        init () {\n            if (window.localStorage.getItem(\"show\")) this.show = window.localStorage.getItem(\"show\");\n        },\n        set (val) {\n            window.localStorage.setItem(\"show\", val);\n            this.show = val;\n        }\n    });\n    Alpine.store(\"show\").init();\n    if (window.localStorage.getItem(\"lan\")) Alpine.store(\"lan\", window.localStorage.getItem(\"lan\"));\n    else Alpine.store(\"lan\", \"EN\");\n    Alpine.data(\"register\", ()=>({\n            email: \"\",\n            password: \"\",\n            password_repeat: \"\",\n            error_message: \"\",\n            try_register () {\n                axios.post(URL + \"register\", {\n                    email: this.email,\n                    password: this.password,\n                    password_repeat: this.password_repeat\n                }).then((e)=>{\n                    if (e.status == 200) Alpine.store(\"show\").set(1);\n                }).catch((e)=>{\n                    this.error_message = e.response.data.message;\n                });\n            }\n        }));\n    Alpine.data(\"login\", ()=>({\n            email: \"\",\n            password: \"\",\n            error_message: \"\",\n            init () {\n                axios.get(URL + \"jwt\").then((e)=>{\n                    if (e.status == 200) Alpine.store(\"logged_in\", 1);\n                }).catch((e)=>{\n                    if (e.status == 401) Alpine.store(\"logged_in\", 0);\n                });\n            },\n            try_login () {\n                axios.post(URL + \"login\", {\n                    email: this.email,\n                    password: this.password\n                }, {\n                    withCredentials: true\n                }).then((e)=>{\n                    if (e.status == 200) {\n                        console.log(this.email);\n                        this.email = \"\";\n                        this.password = \"\";\n                        this.error_message = \"\";\n                        Alpine.store(\"logged_in\", 1);\n                        window.localStorage.setItem(\"jwt\", e.data.message.access_token);\n                        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + window.localStorage.getItem(\"jwt\");\n                        Alpine.store(\"show\").set(2);\n                    }\n                }).catch((e)=>{\n                    this.error_message = e.response.data.message;\n                });\n            },\n            logout () {\n                axios.get(URL + \"logout\", {\n                    withCredentials: true\n                }).then((e)=>{\n                    Alpine.store(\"show\").set(1);\n                }).catch((e)=>{}).finally(()=>{\n                    Alpine.store(\"logged_in\", 0);\n                });\n            }\n        }));\n    Alpine.data(\"notes\", ()=>({\n            notes: [],\n            notes_settings: {},\n            notes_updates: {},\n            title: \"\",\n            desc: \"\",\n            tab: 0,\n            error_message: \"\",\n            page: 0,\n            notesPerPage: 10,\n            totalNotes: 0,\n            totalPages: 0,\n            deleteindex: -1,\n            loading: 1,\n            adding: 0,\n            updating: 0,\n            reset () {\n                this.notes = [];\n                this.notes_settings = {};\n                this.notes_updates = {};\n                this.title = \"\";\n                this.desc = \"\";\n                this.tab = 0;\n                this.error_message = \"\";\n                this.page = 0;\n                this.notesPerPage = 10;\n                this.totalNotes = 0;\n                this.totalPages = 0;\n                this.deleteindex = -1;\n            },\n            isAuthorized () {\n                return axios.get(URL + \"jwt\").then((e)=>{\n                    if (e.status == 200) return true;\n                    return false;\n                }).catch((e)=>{\n                    return false;\n                });\n            },\n            getNotes () {\n                this.loading = 1;\n                this.notes = [];\n                setTimeout(()=>{\n                    axios.get(URL + `notes/${this.page * this.notesPerPage}/${this.notesPerPage}`, {\n                        withCredentials: true\n                    }).then((e)=>{\n                        if (e.status == 200) {\n                            this.loading = 0;\n                            this.notes = e.data.message.notes;\n                            this.notes_settings = {};\n                        }\n                    }).catch((e)=>{\n                        this.loading = 0;\n                    });\n                    this.getNoteCount();\n                }, 500);\n            },\n            getNoteCount () {\n                axios.get(URL + `notecount`, {\n                    withCredentials: true\n                }).then((e)=>{\n                    if (e.status == 200) {\n                        this.totalNotes = e.data.message.count;\n                        this.totalPages = Math.floor(this.totalNotes / this.notesPerPage + 1);\n                    }\n                }).catch((e)=>{\n                    console.log(e);\n                });\n            },\n            addNote () {\n                this.adding = 1;\n                setTimeout(()=>{\n                    axios.post(URL + \"addnote\", {\n                        title: this.title,\n                        desc: this.desc\n                    }, {\n                        withCredentials: true\n                    }).catch((e)=>{\n                        console.log(e);\n                        this.error_message = e.response.data.message;\n                    }).finally((e)=>{\n                        this.getNotes();\n                        this.adding = 0;\n                    });\n                }, 500);\n            },\n            updateNote (index) {\n                this.updating = 1;\n                setTimeout(()=>{\n                    const [title, desc, added] = this.notes[index];\n                    axios.put(URL + \"updatenote\", {\n                        title,\n                        desc,\n                        added\n                    }, {\n                        withCredentials: true\n                    }).catch((e)=>{\n                        console.log(e);\n                    }).finally((e)=>{\n                        this.getNotes();\n                        this.updating = 0;\n                        this.notes_updates[index] = false;\n                    });\n                }, 500);\n            },\n            deleteNote (index) {\n                axios.delete(URL + `deletenote/${this.notes[index][2]}`, {\n                    withCredentials: true\n                }).catch((e)=>{}).finally((e)=>{\n                    this.getNotes();\n                });\n            },\n            changePage (page) {\n                this.page = page;\n                this.getNotes();\n                console.log(page);\n                console.log(this.totalPages);\n            }\n        }));\n    Alpine.data(\"footer\", ()=>({\n            toggleTheme () {\n                let theme = window.localStorage.getItem(\"theme\");\n                if (!theme) theme = \"dark\";\n                else if (theme == \"dark\") theme = \"light\";\n                else if (theme == \"light\") theme = \"dark\";\n                window.localStorage.setItem(\"theme\", theme);\n                document.querySelector(\"html\").setAttribute(\"data-theme\", window.localStorage.getItem(\"theme\"));\n            },\n            toggleLanguage () {\n                let theme = window.localStorage.getItem(\"lan\");\n                if (!theme) theme = \"EN\";\n                else if (theme == \"EN\") theme = \"PL\";\n                else if (theme == \"PL\") theme = \"EN\";\n                window.localStorage.setItem(\"lan\", theme);\n                Alpine.store(\"lan\", theme);\n                axios.defaults.baseURL = _URL + \"/\" + theme.toLowerCase();\n            // () => {$store.lan == 'PL' ? $store.lan='EN' : $store.lan='PL'}\n            }\n        }));\n});\n\n//# sourceMappingURL=index.a6541cc7.js.map\n","// let URL = \"http://192.168.1.31/api/\"\r\n// let URL = \"http://localhost:8080/api\"\r\nlet URL = \"http://172.160.248.2/api\"\r\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + window.localStorage.getItem(\"jwt\")\r\naxios.defaults.baseURL = URL + \"/en\"\r\nlet _URL = URL\r\nURL = \"\"\r\nif (window.localStorage.getItem(\"theme\") == null) {\r\n    window.localStorage.setItem(\"theme\", \"dark\")\r\n}\r\nif (window.localStorage.getItem(\"lan\") == null) {\r\n    window.localStorage.setItem(\"lan\", \"EN\")\r\n}\r\ndocument.querySelector(\"html\").setAttribute(\"data-theme\", window.localStorage.getItem(\"theme\"))\r\n\r\ndocument.addEventListener(\"alpine:init\", () => {\r\n    Alpine.store(\"logged_in\", 0)\r\n    Alpine.store(\"show\", {\r\n        show: 0,\r\n        init() {\r\n            if (window.localStorage.getItem(\"show\")) {\r\n                this.show = window.localStorage.getItem(\"show\")\r\n            }\r\n        },\r\n        set(val) {\r\n            window.localStorage.setItem(\"show\", val)\r\n            this.show = val\r\n        }\r\n    })\r\n    Alpine.store(\"show\").init()\r\n    if (window.localStorage.getItem(\"lan\")) {\r\n        Alpine.store(\"lan\", window.localStorage.getItem(\"lan\"))\r\n    } else {\r\n        Alpine.store(\"lan\", \"EN\")\r\n    }\r\n\r\n    Alpine.data('register', () => ({\r\n        email: '',\r\n        password: '',\r\n        password_repeat: '',\r\n        error_message: '',\r\n        try_register() {\r\n            axios.post(URL + \"register\", { email: this.email, password: this.password, password_repeat: this.password_repeat })\r\n                .then(e => {\r\n                    if (e.status == 200) {\r\n                        Alpine.store(\"show\").set(1)\r\n                    }\r\n                }).catch(e => {\r\n                    this.error_message = e.response.data.message\r\n                })\r\n        }\r\n    }))\r\n\r\n    Alpine.data('login', () => ({\r\n        email: '',\r\n        password: '',\r\n        error_message: '',\r\n        init() {\r\n            axios.get(URL + \"jwt\").then(e => {\r\n                if (e.status == 200) { Alpine.store(\"logged_in\", 1) }\r\n            }).catch(e => {\r\n                if (e.status == 401) {\r\n                    Alpine.store(\"logged_in\", 0)\r\n                }\r\n            })\r\n        },\r\n        try_login() {\r\n            axios.post(URL + \"login\", { email: this.email, password: this.password }, { withCredentials: true })\r\n                .then(e => {\r\n                    if (e.status == 200) {\r\n                        console.log(this.email)\r\n                        this.email = ''\r\n                        this.password = ''\r\n                        this.error_message = ''\r\n                        Alpine.store(\"logged_in\", 1)\r\n                        window.localStorage.setItem(\"jwt\", e.data.message.access_token)\r\n                        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + window.localStorage.getItem(\"jwt\")\r\n                        Alpine.store(\"show\").set(2)\r\n                    }\r\n                }).catch(e => {\r\n                    this.error_message = e.response.data.message\r\n                })\r\n        },\r\n        logout() {\r\n            axios.get(URL + \"logout\", { withCredentials: true }).then(e => {\r\n                Alpine.store(\"show\").set(1)\r\n            }).catch(e => {\r\n            }).finally(() => {\r\n                Alpine.store(\"logged_in\", 0)\r\n            })\r\n        }\r\n    }))\r\n\r\n    Alpine.data(\"notes\", () => ({\r\n        notes: [],\r\n        notes_settings: {},\r\n        notes_updates: {},\r\n        title: '',\r\n        desc: '',\r\n        tab: 0,\r\n        error_message: '',\r\n        page: 0,\r\n        notesPerPage: 10,\r\n        totalNotes: 0,\r\n        totalPages: 0,\r\n        deleteindex: -1,\r\n        loading: 1,\r\n        adding: 0,\r\n        updating: 0,\r\n        reset() {\r\n            this.notes = []\r\n            this.notes_settings = {}\r\n            this.notes_updates = {}\r\n            this.title = ''\r\n            this.desc = ''\r\n            this.tab = 0\r\n            this.error_message = ''\r\n            this.page = 0\r\n            this.notesPerPage = 10\r\n            this.totalNotes = 0\r\n            this.totalPages = 0\r\n            this.deleteindex = -1\r\n        },\r\n        isAuthorized() {\r\n            return axios.get(URL + \"jwt\").then(e => {\r\n                if (e.status == 200) { return true }\r\n                return false\r\n            }).catch(e => { return false })\r\n        },\r\n        getNotes() {\r\n            this.loading = 1\r\n            this.notes = []\r\n            setTimeout(() => {\r\n                axios.get(URL + `notes/${this.page * this.notesPerPage}/${this.notesPerPage}`, { withCredentials: true }).then(e => {\r\n                    if (e.status == 200) {\r\n                        this.loading = 0\r\n                        this.notes = e.data.message.notes\r\n                        this.notes_settings = {}\r\n                    }\r\n                }).catch(e => { this.loading = 0 })\r\n                this.getNoteCount()\r\n            }, 500)\r\n        },\r\n        getNoteCount() {\r\n            axios.get(URL + `notecount`, { withCredentials: true }).then(e => {\r\n                if (e.status == 200) {\r\n                    this.totalNotes = e.data.message.count\r\n                    this.totalPages = Math.floor(this.totalNotes / this.notesPerPage + 1)\r\n                }\r\n            }).catch(e => { console.log(e) })\r\n        },\r\n        addNote() {\r\n            this.adding = 1\r\n            setTimeout(() => {\r\n                axios.post(URL + \"addnote\", { title: this.title, desc: this.desc }, { withCredentials: true }).catch(e => {\r\n                    console.log(e)\r\n                    this.error_message = e.response.data.message\r\n                }).finally(e => {\r\n                    this.getNotes()\r\n                    this.adding = 0\r\n                })\r\n            }, 500)\r\n        },\r\n        updateNote(index) {\r\n            this.updating = 1\r\n            setTimeout(() => {\r\n                const [title, desc, added] = this.notes[index]\r\n                axios.put(URL + \"updatenote\", { title, desc, added }, { withCredentials: true }).catch(e => { console.log(e) }).finally(e => {\r\n                    this.getNotes()\r\n                    this.updating = 0\r\n                    this.notes_updates[index] = false\r\n                })\r\n            }, 500)\r\n        },\r\n        deleteNote(index) {\r\n            axios.delete(URL + `deletenote/${this.notes[index][2]}`, { withCredentials: true }).catch(e => { }).finally(e => {\r\n                this.getNotes()\r\n            })\r\n        },\r\n        changePage(page) {\r\n            this.page = page\r\n            this.getNotes()\r\n            console.log(page)\r\n            console.log(this.totalPages)\r\n        }\r\n    }))\r\n\r\n    Alpine.data(\"footer\", () => ({\r\n        toggleTheme() {\r\n            let theme = window.localStorage.getItem(\"theme\")\r\n            if (!theme) {\r\n                theme = \"dark\"\r\n            } else if (theme == \"dark\") {\r\n                theme = \"light\"\r\n            } else if (theme == \"light\") {\r\n                theme = \"dark\"\r\n            }\r\n            window.localStorage.setItem(\"theme\", theme)\r\n            document.querySelector(\"html\").setAttribute(\"data-theme\", window.localStorage.getItem(\"theme\"))\r\n        },\r\n        toggleLanguage() {\r\n            let theme = window.localStorage.getItem(\"lan\")\r\n            if (!theme) {\r\n                theme = \"EN\"\r\n            } else if (theme == \"EN\") {\r\n                theme = \"PL\"\r\n            } else if (theme == \"PL\") {\r\n                theme = \"EN\"\r\n            }\r\n            window.localStorage.setItem(\"lan\", theme)\r\n            Alpine.store(\"lan\", theme)\r\n            axios.defaults.baseURL = _URL + \"/\" + theme.toLowerCase()\r\n            // () => {$store.lan == 'PL' ? $store.lan='EN' : $store.lan='PL'}\r\n        }\r\n    }))\r\n})"],"names":["URL","axios","defaults","headers","common","window","localStorage","getItem","baseURL","_URL","setItem","document","querySelector","setAttribute","addEventListener","Alpine","store","show","init","set","val","data","email","password","password_repeat","error_message","try_register","post","then","e","status","catch","response","message","get","try_login","withCredentials","console","log","access_token","logout","finally","notes","notes_settings","notes_updates","title","desc","tab","page","notesPerPage","totalNotes","totalPages","deleteindex","loading","adding","updating","reset","isAuthorized","getNotes","setTimeout","getNoteCount","count","Math","floor","addNote","updateNote","index","added","put","deleteNote","delete","changePage","toggleTheme","theme","toggleLanguage","toLowerCase"],"version":3,"file":"index.a6541cc7.js.map"}